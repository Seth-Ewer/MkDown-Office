@page "/"
@using MkDownOffice.Models
@using MkDownOffice.Shared
@inject ViewModel _viewModel

<MarkdownEditor @bind-Value="@currentMarkdown"
                ValueHTMLChanged="@OnMarkdownValueHTMLChanged"
                />

@* <p>
  @((MarkupString)renderedMarkdown)
</p> *@

@code {
  string renderedMarkdown = "";
  string currentMarkdown = "";

  protected override async Task OnInitializedAsync()
  {
    await _viewModel.SetCurrentFile("D:\\GitHub\\MkDown-Office\\Design\\core-architecture-classes.md");
    this.currentMarkdown = _viewModel.CurrentFile.Markdown;
    this.renderedMarkdown = _viewModel.GetRenderedMarkdownForCurrentFile();
  }

  void OnMarkdownValueHTMLChanged(string value)
  {
    _viewModel.CurrentFile.Markdown = value;
    this.renderedMarkdown = _viewModel.GetRenderedMarkdownForCurrentFile();
  }
}