@inherits LayoutComponentBase
@using MkDownOffice.Models
@using System.ComponentModel
@inject MarkdownViewModel _viewModel

<FluentDesignTheme Mode="DesignThemeModes.Dark" />

<!--

<FluentMainLayout>
  <Header>
    <TopMenu />
  </Header>
  <Body>
@Body
  </Body>
  <NavMenuContent>
    <NavMenu />
  </NavMenuContent>
</FluentMainLayout>

-->

<FluentLayout Style="height:100vh;width:100%">

  <FluentHeader>
    MkDownOffice
    <FluentSpacer />
  </FluentHeader>

  <FluentStack Orientation="Orientation.Horizontal"
               HorizontalGap="4"
               Style="width:100%; height:100%; background-color: var(--neutral-layer-1)">
    <ToolBar />
    <FluentStack Orientation="Orientation.Vertical"
                 VerticalGap="4"
                 Style="width:100%; height:100%">
      <BreadcrumbMenu />
      <FluentSplitter Orientation="Orientation.Horizontal"
                      BarSize="6"
                      Panel1MinSize="20%"
                      Panel1Size="20%"
                      Panel2MinSize="200px"
                      Style="height:100%; width:100%">
        <Panel1>
          <NavMenu />
        </Panel1>
        <Panel2>
          @Body
        </Panel2>

      </FluentSplitter>
    </FluentStack>
  </FluentStack>

</FluentLayout>

@code {
  protected override async Task OnInitializedAsync()
  {
    this._viewModel.PropertyChanged += HandlePropertyChanged;
    await base.OnInitializedAsync();
  }

  private void HandlePropertyChanged(object sender, PropertyChangedEventArgs e)
  {
    if (e.PropertyName == nameof(this._viewModel.CurrentMenu))
    {
      this.StateHasChanged();
    }
  }
  ~MainLayout()
  {
    this._viewModel.PropertyChanged -= HandlePropertyChanged;
  }
}