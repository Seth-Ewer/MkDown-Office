@using MkDownOffice.Models
@inject ViewModel _viewModel

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">MkDown Office</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    @if(_viewModel.RootFolder == null)
    {
        <button @onclick="OpenRootFolderSelect"> CLICK HERE TO SELECT FOLDER </button>
    }
    else
    {
        <FluentBreadcrumb>
        @foreach(var folder in _viewModel.GetBreadcrumbs().Select((value, i) => new {i, value}).Reverse())
        {
            <FluentBreadcrumbItem @onclick="() => _viewModel.SetCurrentFolderToParent(folder.i)">
                @folder.value
            </FluentBreadcrumbItem>
        }
        </FluentBreadcrumb>

        <ul class="nav flex-column">

            @foreach(var folder in _viewModel.CurrentFolder.Folders)
            {
                <li @onclick="() => _viewModel.SetCurrentFolder(folder)">
                    @folder
                </li>
            }

            @foreach(var file in _viewModel.CurrentFolder.Files)
            {
                <li @onclick="() => _viewModel.SetCurrentFile(file)">
                    @file
                </li>
            }
        </ul>
    }
</div>

@code {
    private void OpenRootFolderSelect()
    {
        //Temporarily(?) locked to appdata folder
        _viewModel.SetRootFolder();
    }
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
