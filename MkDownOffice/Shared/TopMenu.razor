@using MkDownOffice.Models
@using System.ComponentModel
@inject ViewModel _viewModel


<div>

    <FluentBreadcrumb>
    @foreach(var folder in crumbs)
    {
        <FluentBreadcrumbItem @onclick="() => _viewModel.SetCurrentFolderToParent(folder.Index)">
            @folder.Name
        </FluentBreadcrumbItem>
    }
    @if (this._viewModel.CurrentFile != null)
    {
      <FluentBreadcrumbItem>@this._viewModel.CurrentFile.Name</FluentBreadcrumbItem>
    }
  </FluentBreadcrumb>

</div>

@code {

List<Breadcrumb> crumbs = new List<Breadcrumb>();

protected override async Task OnInitializedAsync() {
    this._viewModel.PropertyChanged += HandlePropertyChanged;
    await base.OnInitializedAsync();
}

private void HandlePropertyChanged(object sender, PropertyChangedEventArgs e)
  {
    if(e.PropertyName == nameof(this._viewModel.CurrentFolder) 
    || e.PropertyName == nameof(this._viewModel.CurrentFile))
    {
      crumbs = _viewModel.GetBreadcrumbs().Select((value, i) => new Breadcrumb(){Name=value, Index=i}).Reverse().ToList();
    }
    this.StateHasChanged();
  }

  ~TopMenu()
  {
    this._viewModel.PropertyChanged -= HandlePropertyChanged;
  }
}